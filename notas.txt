#Documentacion con swagger.
fast api integra una documentacion autogenerada con swagger que explica que va a tener nuestros endpoints 
basandose en los estandares openAPI

dentro del mundo del interneto el protocolo https es aque que se define como el conjunto de metodos de peticion
que indican al navegador que acciones se desea realizar dentro del servidor 

los metodos principales del protocolo https son:
    -post: crear un nuevo recurso
    -put: editar un recurso
    -get : consultar la informacion de un recurso
    -delete :eliminar un recurso.
basicamente podemos hacer un CRUD

>metodo Get
#parametros de ruta
dentro del parametro del decorador podemos enviar parametros para realizar filtrados, esto junto a una funcion
donde realicemos el filtrados podemos realizar el filrado.

#parametros query
cuando se especifica en la funcion va a requerir de un parametro pero no en la ruta (decorador/url), fast api
va a detectarlo como un parametro query


>Metodo post
para el metodo post dentro de la funcion hay que especificar la estrucutra de datos con la cual estemos trabajando
asi mismo para que la respuesta de esta sea un body y no como un parametro query, a los paramtros hay que aÃ±adirles que son de clase Body()

>metodo delete y metodo put
no son muy diferentes, el metodo delete es basicamente buscar pero en lugar de imprimir es borrar
el metodo put es el metodo post pero en luggar de crear nuevops registros actualiza los ya existentes

# creacion de esquemas

la creacion de esquemas, es crear una clase con los el modelo de datos que vamos a usar, medianmte la libreria pydantic el modulo Basemodel()
es el que nos permite esta accion, poder crear un modelo base de datos y pasarlo a las funciones/ metodos como el argumento de como va  ser el modelo
de datos con el cual va a trabajar

# validacion de datos
las validaciones son la manera en la que podemos nostros realizar control sobre el tipo de datos que se ingresan en nuestros formularios
esto mediante la clase Field de pydantic la cual nos permite especificar las condiciones que tienen que cumplir
los datos para que sean validos por nuestro programa, 
otra cualidad que podemos realizar es dentro de nuestros modelo podemos crear esquemas default, asi de esta forma no es necesario 
pasarlo como atributo si no creando una clase dentro del modelo que nos defina este esquema por defecto

#Validacion de parametros

al igual como se realizo con la validacion de los datos, igualmente se puede realizar una validacion
a los parametros query y los parametros de ruta.
la validacion de los parametros de ruta, se realiza importando la libreria propia de fastApi llamada path
esta validacion se realiza pasandole los limites dentro de los id por ejemplo en el metodo get 
al igual que para los parametros de ruta se usa la clase path para los parametros query se importa el modulo Query
y de igual forma se incluye en el parametro de string incluyendo los limites

# tipos de respuesta

aparte de las respuestas de html, fast api nos permite de igualforma otros tipos de respuesta, por ejemplo
    -JsonResponse: esta nos permite enviar el contenido en formato Json al cliente, esta es por defecto
    la respuesta de fastApi

a fastApi podemos especificarle el modelo de respusta que vamos a obtener, esto se realiza especificando en el parametro de la ruta
con la opcion de response_model, en la cual debemos especificarel tipo de respuesta que queremos que sea dada.
        - si queremos que retorne un listado hayu que importar desde typing esta clase  al igual que se hizo con el optional ,
de igual forma a la funcion se debe especificar la salida al igual que se realizo con el 

# Codigo de estados

los codigos de estado nos da la informacion si una peticion se ha ejecutado correctamente o no, estos codigos de estado 
realizan mediante pasando al parametro de ruta mediante el status_code, de igual forma en el JsonResponse utilizando el 
status_code pasandole el codigo que deberia retornar la funcion

# flujos de autenticacion

el flujo de autenticacion es todo el proceso que realizaremos desde la creacion y validacion de tokens a peticion 
del usuario para el acceso a la ruta que esta solicitando, esto se realizara mediante la libreria pyJWT( python Json web token),
    - un token jwt es un objeto de seguridad que se utiliza para autenticar a los usuarios en aplicaciones web y moviles
    - estos tokens se envian al cliente que los utiliza para demostrar su identidad frente a recursos protegidos del servidor
    